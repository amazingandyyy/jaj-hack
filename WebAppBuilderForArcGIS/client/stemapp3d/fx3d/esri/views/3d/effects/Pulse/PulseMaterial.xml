<?xml version="1.0" encoding="UTF-8"?><!-- Copyright @ 2017 Esri. All rights reserved under the copyright laws of the United States and applicable international laws, treaties, and conventions. --><snippets><snippet name="pulseFS"><![CDATA[
#ifdef GL_ES
precision mediump float;
#endif
uniform vec3 pp;uniform vec4 ip;uniform vec4 ml;uniform vec4 os;uniform vec3 im;uniform float lm;uniform vec3 es;varying vec2 gg;varying vec3 hc;varying vec3 cg;varying vec4 ch;const vec3 a=vec3(1.0,1.0,1.0);const vec3 b=vec3(1.0,1.0,1.0);const vec3 c=vec3(0.4,0.4,0.4);void main(){vec3 d=normalize(cg-im);vec3 e=normalize(hc);vec3 f=normalize(reflect(d,e));float g=max(dot(f,pp),.001);vec3 h=c*os.rgb*os.w*pow(g,16.0);vec3 i=a*ml.rgb*ml.w*clamp(dot(e,pp),.0,1.0);vec3 j=b*ip.rgb*ip.w;vec3 k=vec3(j+i+h);float l=abs(gg.x-0.5)/0.5;gl_FragColor=(1.0-l)*vec4(es,1.0)+l*ch;gl_FragColor*=vec4(k,1.0);float m=lm*0.01;gl_FragColor.w=m;}]]></snippet><snippet name="pulseVS"><![CDATA[attribute vec3 $position;attribute vec3 $auxpos1;uniform mat4 ps;uniform mat4 ms;uniform bool mm;uniform float em;uniform sampler2D se;uniform sampler2D ep;uniform vec2 ol;uniform float le;uniform vec2 pe;uniform float me;uniform vec2 ss;uniform bool pi;uniform sampler2D io;varying vec3 hc;varying vec3 cg;varying vec2 gg;varying vec4 ch; $lonlat2position  $translationMat  $linearInterpolator  $localTrans  $expoEaseOut const float a=0.0;const float b=1.0;const float c=2.0;const float d=3.0;void main(void){float e=fract($auxpos1.x/ol.x);float f=floor($auxpos1.x/ol.y)/ol.y;float g=(texture2D(se,vec2(e,f))).r;float h=(texture2D(ep,vec2(e,f))).r;float i=mod(me,le);float j=getExpoEaseOutValue(i,g,h,le);if(pi) j=h;float k=getLinearValue(ss,j);if(mm){float l=200000.0;if($auxpos1.y==a||$auxpos1.y==d){l=getScope(pe,k);}else if($auxpos1.y==b||$auxpos1.y==c){l=1.25*getScope(pe,k);}if($auxpos1.y==a) gg=vec2(0.0,0.0);else if($auxpos1.y==d) gg=vec2(0.0,1.0);else if($auxpos1.y==b) gg=vec2(1.0,0.0);else if($auxpos1.y==c) gg=vec2(1.0,1.0);float m=$auxpos1.z*2.0*PI;vec3 n=vec3(l*cos(m),l*sin(m),0.0);vec3 o,p;mat4 q=mat4(1.0);
#ifdef GLOBAL
mat4 r=getTransMat($position);q=toRotationMat(r);o=(r*vec4(n,1.0)).xyz;vec4 s=vec4(0.0,0.0,1.0,0.0);p=(q*s).xyz;
#else
o=wgs84ToWebMerc($position);o+=n;p=vec3(1.0,0.0,1.0);
#endif
gl_Position=ps*ms*vec4(o,1.0);hc=normalize(p);cg=o;ch=texture2D(io,vec2(k,0.5));}else{float t=getScope(pe,k);mat4 r=getTransMat($position);float u=($auxpos1.y-em/2.0)*(20.0/em);float v=($auxpos1.z-em/2.0)*(20.0/em);float w=exp(-0.0831*(u*u+v*v));float x=atan(u,v);u=w*cos(2.0*x);v=w*sin(2.0*x);float y=sqrt(u*u+v*v)*getScope(pe,k);vec3 o=(r*vec4(t*($auxpos1.y/em-0.5),t*($auxpos1.z/em-0.5),y,1.0)).xyz;vec3 p=normalize(o);gl_Position=ps*ms*vec4(o,1.0);hc=p;cg=o;gg=$auxpos1.yz/(em-1.0);}}]]></snippet></snippets>