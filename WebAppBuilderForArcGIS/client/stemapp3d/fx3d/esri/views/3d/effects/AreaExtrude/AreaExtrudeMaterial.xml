<?xml version="1.0" encoding="UTF-8"?><!-- Copyright @ 2017 Esri. All rights reserved under the copyright laws of the United States and applicable international laws, treaties, and conventions. --><snippets><snippet name="areaExtrudeFS"><![CDATA[
#ifdef GL_ES
precision highp float;
#endif
uniform float op;uniform vec3 mm;uniform vec4 le;uniform vec4 ip;uniform vec4 is;uniform vec3 oi;varying vec4 gd;varying vec3 hg;varying vec3 gg;const vec3 a=vec3(1.0,1.0,1.0);const vec3 b=vec3(1.0,1.0,1.0);const vec3 c=vec3(0.2,0.2,0.2);void main(){vec3 d=normalize(gg-oi);vec3 e=normalize(hg);vec3 f=normalize(reflect(d,e));float g=max(dot(f,mm),.001);vec3 h=c*is.rgb*is.w*pow(g,10.0);vec3 i=a*ip.rgb*ip.w*clamp(dot(e,mm),.0,1.0);vec3 j=b*le.rgb*le.w;vec3 k=vec3(j+i+h);gl_FragColor.xyz=gd.xyz*k;float l=op*0.01;gl_FragColor.w=l;}]]></snippet><snippet name="areaExtrudeVS"><![CDATA[attribute vec3 $position;attribute vec2 $auxpos1;attribute vec2 $auxpos2;uniform mat4 os;uniform mat4 es;uniform sampler2D io;uniform sampler2D se;uniform float em;uniform vec2 om;uniform vec3 sp;uniform sampler2D ps;uniform vec3 im;uniform float mi;uniform vec2 lo;uniform vec2 ss;uniform bool pe;uniform vec4 ms;varying vec4 gd;varying vec3 hg;varying vec3 gg; $linearInterpolator  $lonlat2position  $translationMat  $localTrans  $quintEaseOut const float a=1.0;const float b=0.0;vec4 matchPixelCenter(vec4 c,vec2 d){vec2 e=vec2(.500123)+.5*c.xy/c.w;vec2 f=floor(e*d);vec2 g=vec2(1.0)/d;vec2 h=(((vec2(.5)+f)*g)*2.0-vec2(1.0))*c.w;return vec4(h.x,h.y,c.z,c.w);}void main(void){float i=fract($auxpos1.x/lo.x);float j=floor($auxpos1.x/lo.y)/lo.y;float k=(texture2D(io,vec2(i,j))).r;float l=(texture2D(se,vec2(i,j))).r;float m=mod(mi,em);float n=getQuintEaseInOutValue(m,k,l,em);if(pe){n=l;}float o=getLinearValue(ss,n);bool p=false;if($auxpos1.y==a){p=true;}else if($auxpos1.y==b){p=false;}vec3 q,r,s;mat4 t=mat4(1.0);
#ifdef GLOBAL
mat4 u=getTransMat($position);q=u[3].xyz;t=toRotationMat(u);vec4 v=vec4(0.0,0.0,1.0,0.0);s=lonlat2position(vec3($auxpos2,1.0));r=(t*v).xyz;
#else
q=wgs84ToWebMerc($position);s=wgs84ToWebMerc(vec3($auxpos2,1.0));r=vec3(0.0,0.0,1.0);
#endif
r=normalize(r);if(p){gd=texture2D(ps,vec2(o,0.5));q+=(r*(getScope(om,o)));}else{gd=vec4(im,1.0);}vec3 w=vec3(1.0,0.0,0.0);float x=1.0;float y=1.0;float z=abs(dot(r,normalize(sp-q)));float A=0.00001;vec3 B=(es*vec4(q,1.0)).xyz;if(z>.01){float C=sqrt(1.0-z*z)/z;float D=(1.0-C/ms[2]);if(y>0.0){B*=D;}else{B/=D;}}B+=w;vec4 E=os*vec4(B,1.0);E.z-=y*A*E.w;gl_Position=matchPixelCenter(E,ms.zw);hg=normalize((r-normalize(s))+normalize(q));gg=q;}]]></snippet></snippets>